{"ast":null,"code":"var _jsxFileName = \"D:\\\\FarmConnect\\\\frontend\\\\src\\\\contexts\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [notifications, setNotifications] = useState([]);\n  const {\n    user,\n    isAuthenticated\n  } = useAuth();\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      const newSocket = io('http://localhost:5000');\n      newSocket.on('connect', () => {\n        console.log('Connected to server');\n        newSocket.emit('join-room', user.id);\n      });\n      newSocket.on('new-request', data => {\n        toast.info(data.message);\n        setNotifications(prev => [...prev, {\n          id: Date.now(),\n          type: 'request',\n          message: data.message,\n          data: data.request,\n          timestamp: new Date()\n        }]);\n      });\n      newSocket.on('request-status-update', data => {\n        toast.info(data.message);\n        setNotifications(prev => [...prev, {\n          id: Date.now(),\n          type: 'status-update',\n          message: data.message,\n          data: data.request,\n          timestamp: new Date()\n        }]);\n      });\n      setSocket(newSocket);\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [isAuthenticated, user]);\n  const clearNotification = id => {\n    setNotifications(prev => prev.filter(notif => notif.id !== id));\n  };\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n  const value = {\n    socket,\n    notifications,\n    clearNotification,\n    clearAllNotifications\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"YL2FS0PfwTijuGQ5asBE44P/ApQ=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","toast","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","context","Error","SocketProvider","children","_s2","socket","setSocket","notifications","setNotifications","user","isAuthenticated","newSocket","on","console","log","emit","id","data","info","message","prev","Date","now","type","request","timestamp","close","clearNotification","filter","notif","clearAllNotifications","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/FarmConnect/frontend/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { toast } from 'react-toastify';\n\nconst SocketContext = createContext();\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const [notifications, setNotifications] = useState([]);\n  const { user, isAuthenticated } = useAuth();\n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      const newSocket = io('http://localhost:5000');\n      \n      newSocket.on('connect', () => {\n        console.log('Connected to server');\n        newSocket.emit('join-room', user.id);\n      });\n\n      newSocket.on('new-request', (data) => {\n        toast.info(data.message);\n        setNotifications(prev => [...prev, {\n          id: Date.now(),\n          type: 'request',\n          message: data.message,\n          data: data.request,\n          timestamp: new Date()\n        }]);\n      });\n\n      newSocket.on('request-status-update', (data) => {\n        toast.info(data.message);\n        setNotifications(prev => [...prev, {\n          id: Date.now(),\n          type: 'status-update',\n          message: data.message,\n          data: data.request,\n          timestamp: new Date()\n        }]);\n      });\n\n      setSocket(newSocket);\n\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [isAuthenticated, user]);\n\n  const clearNotification = (id) => {\n    setNotifications(prev => prev.filter(notif => notif.id !== id));\n  };\n\n  const clearAllNotifications = () => {\n    setNotifications([]);\n  };\n\n  const value = {\n    socket,\n    notifications,\n    clearNotification,\n    clearAllNotifications\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}